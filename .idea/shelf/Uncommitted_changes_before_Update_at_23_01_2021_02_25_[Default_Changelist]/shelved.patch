Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"a77a2924-7252-45c8-9af3-0592d5c1c50c\" name=\"Default Changelist\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"spring-beans.schema\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"Enum\" />\r\n        <option value=\"Interface\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"importingSettings\">\r\n      <MavenImportingSettings>\r\n        <option name=\"jdkForImporter\" value=\"openjdk-15\" />\r\n      </MavenImportingSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedIndex\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1mRACWbbcDVrxcFx2nkNkUPFtMe\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"DatabaseDriversLRU\" value=\"mysql&#10;mongo\" />\r\n    <property name=\"RequestMappingsPanelOrder0\" value=\"0\" />\r\n    <property name=\"RequestMappingsPanelOrder1\" value=\"1\" />\r\n    <property name=\"RequestMappingsPanelWidth0\" value=\"75\" />\r\n    <property name=\"RequestMappingsPanelWidth1\" value=\"75\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/microservice-client\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"reference.settingsdialog.project.gant\" />\r\n  </component>\r\n  <component name=\"RestClientSettings\">\r\n    <option name=\"REQUEST_HISTORY\">\r\n      <list>\r\n        <RestClientRequest>\r\n          <option name=\"httpMethod\" value=\"GET\" />\r\n          <option name=\"urlBase\" value=\"http://localhost:3001\" />\r\n          <option name=\"urlPath\" value=\"\" />\r\n          <option name=\"textToSend\" value=\"\" />\r\n          <option name=\"filesToSend\" value=\"\" />\r\n        </RestClientRequest>\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"RunAnythingCache\">\r\n    <option name=\"myCommands\">\r\n      <command value=\"mvn clean install\" />\r\n      <command value=\"mvn spring-boot:run\" />\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.ClientApplication\">\r\n    <configuration name=\"generated-requests#1\" type=\"HttpClient.HttpRequestRunConfigurationType\" factoryName=\"HTTP Request\" temporary=\"true\" path=\"$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http\" runType=\"Run single request\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"generated-requests#2\" type=\"HttpClient.HttpRequestRunConfigurationType\" factoryName=\"HTTP Request\" temporary=\"true\" path=\"$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http\" index=\"2\" runType=\"Run single request\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"AuthApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <module name=\"auth\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.ecommerce.auth.AuthApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ClientApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <module name=\"client\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.ecommerce.client.ClientApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"HTTP Request.generated-requests#2\" />\r\n        <item itemvalue=\"HTTP Request.generated-requests#1\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"a77a2924-7252-45c8-9af3-0592d5c1c50c\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1609445903815</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1609445903815</updated>\r\n      <workItem from=\"1609445906198\" duration=\"651000\" />\r\n      <workItem from=\"1609446679862\" duration=\"27084000\" />\r\n      <workItem from=\"1609603412336\" duration=\"23711000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"properties\">\r\n      <created>1609447183417</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609447183417</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Client\">\r\n      <created>1609514191296</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609514191296</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Client\">\r\n      <created>1609526388720</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609526388720</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Client\">\r\n      <created>1609528124734</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609528124734</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"client ms\">\r\n      <created>1609604491717</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609604491717</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"client &amp; auth changes\">\r\n      <created>1609631706737</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609631706737</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"client &amp; auth changes\">\r\n      <created>1609632779257</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609632779257</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"properties\" />\r\n    <MESSAGE value=\"Client\" />\r\n    <MESSAGE value=\"client ms\" />\r\n    <MESSAGE value=\"client &amp; auth changes\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"client &amp; auth changes\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 584cc0119c9505a6e8514b7334083b804b1b6375)
+++ b/.idea/workspace.xml	(date 1611365103958)
@@ -4,7 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="a77a2924-7252-45c8-9af3-0592d5c1c50c" name="Default Changelist" comment="" />
+    <list default="true" id="a77a2924-7252-45c8-9af3-0592d5c1c50c" name="Default Changelist" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/microservice-auth/src/main/java/com/ecommerce/auth/web/controller/AuthController.java" beforeDir="false" afterPath="$PROJECT_DIR$/microservice-auth/src/main/java/com/ecommerce/auth/web/controller/AuthController.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -14,9 +17,9 @@
     <option name="RECENT_TEMPLATES">
       <list>
         <option value="spring-beans.schema" />
-        <option value="Class" />
         <option value="Enum" />
         <option value="Interface" />
+        <option value="Class" />
       </list>
     </option>
   </component>
@@ -76,6 +79,17 @@
     </option>
   </component>
   <component name="RunManager" selected="Spring Boot.ClientApplication">
+    <configuration default="true" type="ArquillianJUnit" factoryName="" nameIsGenerated="true">
+      <option name="arquillianRunConfiguration">
+        <value>
+          <option name="containerStateName" value="" />
+        </value>
+      </option>
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
     <configuration name="generated-requests#1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" path="$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http" runType="Run single request">
       <method v="2" />
     </configuration>
@@ -164,7 +178,21 @@
       <option name="project" value="LOCAL" />
       <updated>1609632779257</updated>
     </task>
-    <option name="localTasksCounter" value="8" />
+    <task id="LOCAL-00008" summary="client changes">
+      <created>1611364690678</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1611364690678</updated>
+    </task>
+    <task id="LOCAL-00009" summary="client changes">
+      <created>1611364946871</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1611364946871</updated>
+    </task>
+    <option name="localTasksCounter" value="10" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -187,6 +215,7 @@
     <MESSAGE value="Client" />
     <MESSAGE value="client ms" />
     <MESSAGE value="client &amp; auth changes" />
-    <option name="LAST_COMMIT_MESSAGE" value="client &amp; auth changes" />
+    <MESSAGE value="client changes" />
+    <option name="LAST_COMMIT_MESSAGE" value="client changes" />
   </component>
 </project>
\ No newline at end of file
Index: microservice-auth/src/main/java/com/ecommerce/auth/web/controller/AuthController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ecommerce.auth.web.controller;\r\n\r\n\r\nimport com.ecommerce.auth.dao.ClientDao;\r\nimport com.ecommerce.auth.dao.RoleDao;\r\nimport com.ecommerce.auth.model.Client;\r\nimport com.ecommerce.auth.model.ERole;\r\nimport com.ecommerce.auth.model.Role;\r\nimport com.ecommerce.auth.payload.request.LoginRequest;\r\nimport com.ecommerce.auth.payload.request.SignUpRequest;\r\nimport com.ecommerce.auth.payload.response.JwtResponse;\r\nimport com.ecommerce.auth.payload.response.MessageResponse;\r\nimport com.ecommerce.auth.security.jwt.JwtUtils;\r\nimport com.ecommerce.auth.security.services.UserDetailsImpl;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.security.authentication.AuthenticationManager;\r\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\r\nimport org.springframework.security.core.Authentication;\r\nimport org.springframework.security.core.GrantedAuthority;\r\nimport org.springframework.security.core.context.SecurityContextHolder;\r\nimport org.springframework.security.crypto.password.PasswordEncoder;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport javax.validation.Valid;\r\nimport java.util.HashSet;\r\nimport java.util.List;\r\nimport java.util.Set;\r\nimport java.util.stream.Collectors;\r\n\r\n@CrossOrigin(origins = \"*\", maxAge = 3600)\r\n@RestController\r\n@RequestMapping(\"/api/auth\")\r\npublic class AuthController {\r\n    @Autowired\r\n    AuthenticationManager authenticationManager;\r\n\r\n    @Autowired\r\n    ClientDao userRepository;\r\n\r\n    @Autowired\r\n    RoleDao roleRepository;\r\n\r\n    @Autowired\r\n    PasswordEncoder encoder;\r\n\r\n    @Autowired\r\n    JwtUtils jwtUtils;\r\n\r\n    @PostMapping(\"/signin\")\r\n    public ResponseEntity<?> authenticateUser(@Valid @RequestBody LoginRequest loginRequest) {\r\n\r\n        Authentication authentication = authenticationManager.authenticate(\r\n                new UsernamePasswordAuthenticationToken(loginRequest.getUsername(), loginRequest.getPassword()));\r\n\r\n        SecurityContextHolder.getContext().setAuthentication(authentication);\r\n        String jwt = jwtUtils.generateJwtToken(authentication);\r\n\r\n        UserDetailsImpl userDetails = (UserDetailsImpl) authentication.getPrincipal();\r\n        List<String> roles = userDetails.getAuthorities().stream()\r\n                .map(GrantedAuthority::getAuthority)\r\n                .collect(Collectors.toList());\r\n\r\n        return ResponseEntity.ok(new JwtResponse(jwt,\r\n                userDetails.getId(),\r\n                userDetails.getUsername(),\r\n                userDetails.getEmail(),\r\n                roles));\r\n    }\r\n\r\n    @PostMapping(\"/signup\")\r\n    public ResponseEntity<?> registerUser(@Valid @RequestBody SignUpRequest signUpRequest) {\r\n        if (userRepository.existsByUsername(signUpRequest.getUsername())) {\r\n            return ResponseEntity\r\n                    .badRequest()\r\n                    .body(new MessageResponse(\"Error: Username is already taken!\"));\r\n        }\r\n\r\n        if (userRepository.existsByEmail(signUpRequest.getEmail())) {\r\n            return ResponseEntity\r\n                    .badRequest()\r\n                    .body(new MessageResponse(\"Error: Email is already in use!\"));\r\n        }\r\n\r\n        // Create new user's account\r\n        Client user = new Client(signUpRequest.getUsername(),\r\n                signUpRequest.getEmail(),\r\n                encoder.encode(signUpRequest.getPassword()));\r\n\r\n        Set<String> strRoles = signUpRequest.getRoles();\r\n        Set<Role> roles = new HashSet<>();\r\n\r\n        if (strRoles == null) {\r\n            Role userRole = roleRepository.findByName(ERole.ROLE_USER)\r\n                    .orElseThrow(() -> new RuntimeException(\"Error: Role is not found.\"));\r\n            roles.add(userRole);\r\n        } else {\r\n            strRoles.forEach(role -> {\r\n                switch (role) {\r\n                    case \"admin\" -> {\r\n                        Role adminRole = roleRepository.findByName(ERole.ROLE_ADMIN)\r\n                                .orElseThrow(() -> new RuntimeException(\"Error: Role is not found.\"));\r\n                        roles.add(adminRole);\r\n                    }\r\n                    case \"mod\" -> {\r\n                        Role modRole = roleRepository.findByName(ERole.ROLE_MODERATOR)\r\n                                .orElseThrow(() -> new RuntimeException(\"Error: Role is not found.\"));\r\n                        roles.add(modRole);\r\n                    }\r\n                    default -> {\r\n                        Role userRole = roleRepository.findByName(ERole.ROLE_USER)\r\n                                .orElseThrow(() -> new RuntimeException(\"Error: Role is not found.\"));\r\n                        roles.add(userRole);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        user.setRoles(roles);\r\n        userRepository.save(user);\r\n\r\n        return ResponseEntity.ok(new MessageResponse(\"User registered successfully!\"));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/microservice-auth/src/main/java/com/ecommerce/auth/web/controller/AuthController.java b/microservice-auth/src/main/java/com/ecommerce/auth/web/controller/AuthController.java
--- a/microservice-auth/src/main/java/com/ecommerce/auth/web/controller/AuthController.java	(revision 584cc0119c9505a6e8514b7334083b804b1b6375)
+++ b/microservice-auth/src/main/java/com/ecommerce/auth/web/controller/AuthController.java	(date 1611364686410)
@@ -13,7 +13,7 @@
 import com.ecommerce.auth.security.jwt.JwtUtils;
 import com.ecommerce.auth.security.services.UserDetailsImpl;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.http.ResponseEntity;
+import org.springframework.http.*;
 import org.springframework.security.authentication.AuthenticationManager;
 import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
 import org.springframework.security.core.Authentication;
@@ -21,8 +21,10 @@
 import org.springframework.security.core.context.SecurityContextHolder;
 import org.springframework.security.crypto.password.PasswordEncoder;
 import org.springframework.web.bind.annotation.*;
+import org.springframework.web.client.RestTemplate;
 
 import javax.validation.Valid;
+import java.util.Arrays;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
@@ -35,8 +37,10 @@
     @Autowired
     AuthenticationManager authenticationManager;
 
+    //@Autowired
+    //ClientDao userRepository;
     @Autowired
-    ClientDao userRepository;
+    RestTemplate restTemplate;
 
     @Autowired
     RoleDao roleRepository;
@@ -70,55 +74,13 @@
 
     @PostMapping("/signup")
     public ResponseEntity<?> registerUser(@Valid @RequestBody SignUpRequest signUpRequest) {
-        if (userRepository.existsByUsername(signUpRequest.getUsername())) {
-            return ResponseEntity
-                    .badRequest()
-                    .body(new MessageResponse("Error: Username is already taken!"));
-        }
-
-        if (userRepository.existsByEmail(signUpRequest.getEmail())) {
-            return ResponseEntity
-                    .badRequest()
-                    .body(new MessageResponse("Error: Email is already in use!"));
-        }
-
-        // Create new user's account
-        Client user = new Client(signUpRequest.getUsername(),
-                signUpRequest.getEmail(),
-                encoder.encode(signUpRequest.getPassword()));
-
-        Set<String> strRoles = signUpRequest.getRoles();
-        Set<Role> roles = new HashSet<>();
+        HttpHeaders headers = new HttpHeaders();
+        headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
+        HttpEntity<SignUpRequest> entity = new HttpEntity<SignUpRequest>(signUpRequest,headers);
 
-        if (strRoles == null) {
-            Role userRole = roleRepository.findByName(ERole.ROLE_USER)
-                    .orElseThrow(() -> new RuntimeException("Error: Role is not found."));
-            roles.add(userRole);
-        } else {
-            strRoles.forEach(role -> {
-                switch (role) {
-                    case "admin" -> {
-                        Role adminRole = roleRepository.findByName(ERole.ROLE_ADMIN)
-                                .orElseThrow(() -> new RuntimeException("Error: Role is not found."));
-                        roles.add(adminRole);
-                    }
-                    case "mod" -> {
-                        Role modRole = roleRepository.findByName(ERole.ROLE_MODERATOR)
-                                .orElseThrow(() -> new RuntimeException("Error: Role is not found."));
-                        roles.add(modRole);
-                    }
-                    default -> {
-                        Role userRole = roleRepository.findByName(ERole.ROLE_USER)
-                                .orElseThrow(() -> new RuntimeException("Error: Role is not found."));
-                        roles.add(userRole);
-                    }
-                }
-            });
-        }
+        String message = restTemplate.exchange(
+                "http://localhost:8080/products", HttpMethod.POST, entity, String.class).getBody();
 
-        user.setRoles(roles);
-        userRepository.save(user);
-
-        return ResponseEntity.ok(new MessageResponse("User registered successfully!"));
+        return ResponseEntity.ok(new MessageResponse(message));
     }
 }
\ No newline at end of file
